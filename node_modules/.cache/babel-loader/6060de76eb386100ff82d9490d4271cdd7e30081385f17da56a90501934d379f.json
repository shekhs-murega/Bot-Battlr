{"ast":null,"code":"var _jsxFileName = \"/home/shekinah/Moringa/Phase-2/Phase-2-code-challenge-2/Bot-Battlr/src/containers/BotsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from '../components/BotSpecs';\n\n// BotsPage component definition \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotsPage() {\n  _s();\n  const [botCollection, setBotCollection] = useState([]);\n  const [filteredCollection, setFilteredCollection] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  const [collectionVisible, setCollectionVisible] = useState(true);\n  const [botSpecs, setBotSpecs] = useState({});\n  useEffect(() => {\n    fetch('http://localhost:3000/bots').then(response => response.json()).then(bots => {\n      setBotCollection(bots);\n      setFilteredCollection(bots);\n    });\n  }, []);\n  const addToArmy = bot => {\n    const newCollection = filteredCollection.filter(card => card.bot_class !== bot.bot_class);\n    setFilteredCollection(newCollection);\n    setBotArmy([...botArmy, bot]);\n    setCollectionVisible(true);\n  };\n  const removeFromArmy = bot => {\n    const newArmy = botArmy.filter(card => card.id !== bot.id);\n    const armyClasses = newArmy.map(bot => bot.bot_class);\n    const newCollection = botCollection.filter(bot => !armyClasses.includes(bot.bot_class));\n    setBotArmy(newArmy);\n    setFilteredCollection(newCollection);\n  };\n  const removeBotPermanently = bot => {\n    const newCollection = botCollection.filter(card => card !== bot);\n    const newFilteredCollection = filteredCollection.filter(card => card !== bot);\n    const newArmy = botArmy.filter(card => card !== bot);\n    setBotCollection(newCollection);\n    setFilteredCollection(newFilteredCollection);\n    setBotArmy(newArmy);\n    fetch(`http://localhost:3000/bots/${bot.id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(result => console.log(result));\n  };\n  const displayBotSpecs = bot => {\n    setCollectionVisible(false);\n    setBotSpecs(bot);\n  };\n  const displayBotCollection = () => {\n    setCollectionVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: botArmy,\n      action: removeFromArmy,\n      removeCard: removeBotPermanently\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), collectionVisible ? /*#__PURE__*/_jsxDEV(BotCollection, {\n      botCollection: filteredCollection,\n      action: displayBotSpecs,\n      removeCard: removeBotPermanently\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: botSpecs,\n      back: displayBotCollection,\n      enlist: addToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(BotsPage, \"6fF+y6ZBTzRRcr8mgSa9ffnI1DU=\");\n_c = BotsPage;\nexport default BotsPage;\nvar _c;\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","BotSpecs","jsxDEV","_jsxDEV","BotsPage","_s","botCollection","setBotCollection","filteredCollection","setFilteredCollection","botArmy","setBotArmy","collectionVisible","setCollectionVisible","botSpecs","setBotSpecs","fetch","then","response","json","bots","addToArmy","bot","newCollection","filter","card","bot_class","removeFromArmy","newArmy","id","armyClasses","map","includes","removeBotPermanently","newFilteredCollection","method","result","console","log","displayBotSpecs","displayBotCollection","children","action","removeCard","fileName","_jsxFileName","lineNumber","columnNumber","back","enlist","_c","$RefreshReg$"],"sources":["/home/shekinah/Moringa/Phase-2/Phase-2-code-challenge-2/Bot-Battlr/src/containers/BotsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './BotCollection';\nimport YourBotArmy from './YourBotArmy';\nimport BotSpecs from '../components/BotSpecs';\n\n// BotsPage component definition \nfunction BotsPage() {\n  const [botCollection, setBotCollection] = useState([]);\n  const [filteredCollection, setFilteredCollection] = useState([]);\n  const [botArmy, setBotArmy] = useState([]);\n  const [collectionVisible, setCollectionVisible] = useState(true);\n  const [botSpecs, setBotSpecs] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:3000/bots')\n      .then(response => response.json())\n      .then(bots => {\n        setBotCollection(bots);\n        setFilteredCollection(bots);\n      });\n  }, []);\n\n  const addToArmy = (bot) => {\n    const newCollection = filteredCollection.filter(card => card.bot_class !== bot.bot_class);\n    setFilteredCollection(newCollection);\n    setBotArmy([...botArmy, bot]);\n    setCollectionVisible(true);\n  };\n\n  const removeFromArmy = (bot) => {\n    const newArmy = botArmy.filter(card => card.id !== bot.id);\n    const armyClasses = newArmy.map(bot => bot.bot_class);\n    const newCollection = botCollection.filter(bot => !armyClasses.includes(bot.bot_class));\n\n    setBotArmy(newArmy);\n    setFilteredCollection(newCollection);\n  };\n\n  const removeBotPermanently = (bot) => {\n    const newCollection = botCollection.filter(card => card !== bot);\n    const newFilteredCollection = filteredCollection.filter(card => card !== bot);\n    const newArmy = botArmy.filter(card => card !== bot);\n\n    setBotCollection(newCollection);\n    setFilteredCollection(newFilteredCollection);\n    setBotArmy(newArmy);\n\n    fetch(`http://localhost:3000/bots/${bot.id}`, {\n      method: 'DELETE'\n    })\n      .then(response => response.json())\n      .then(result => console.log(result));\n  };\n\n  const displayBotSpecs = (bot) => {\n    setCollectionVisible(false);\n    setBotSpecs(bot);\n  };\n\n  const displayBotCollection = () => {\n    setCollectionVisible(true);\n  };\n\n  return (\n    <div>\n      <YourBotArmy bots={botArmy} action={removeFromArmy} removeCard={removeBotPermanently} />\n      {collectionVisible ? (\n        <BotCollection botCollection={filteredCollection} action={displayBotSpecs} removeCard={removeBotPermanently} />\n      ) : (\n        <BotSpecs bot={botSpecs} back={displayBotCollection} enlist={addToArmy} />\n      )}\n    </div>\n  );\n}\n\nexport default BotsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}